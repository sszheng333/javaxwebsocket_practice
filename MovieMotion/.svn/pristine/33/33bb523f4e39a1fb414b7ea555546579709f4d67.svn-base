/**
 * 
 */
package com.comicyu.service.Impl;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.multipart.FilePart;
import org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity;
import org.apache.commons.httpclient.methods.multipart.Part;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.alibaba.fastjson.JSONObject;
import com.comicyu.domain.ResponseStatus;
import com.comicyu.global.Global;
import com.comicyu.service.MotionTransferService;
import com.comicyu.utils.HttpUtil;
import com.comicyu.utils.PostUploadFile;
import com.comicyu.utils.UnicodeUtil;

/**
 * 
 * 项目名称：UploadVideoTransfer 类名称：MotionTransferServiceImpl 类描述： 创建人：zhengss
 * 创建时间：2021年6月11日 上午9:55:08
 * 
 * @version
 */
@Service
public class MotionTransferServiceImpl implements MotionTransferService {

    @Override
    public ResponseStatus getTransferResult(MultipartFile file, String token, String videoKey,
            HttpServletRequest request, HttpServletResponse response) {
        // 1.缓存视频到本地服务器,获取状态,将进度保存至redis
        ResponseStatus status = new ResponseStatus();
        File videoPath = null;
        response.addHeader("Access-Control-Allow-Origin", "*");
        if (token != null && token.equals(Global.serverToen)) {
            try {
                String newFileName = token + UUID.randomUUID().toString();
                String filename = file.getOriginalFilename();
                if (filename != null && filename.lastIndexOf(".") != -1
                        && filename.lastIndexOf(".") != filename.length() - 1) {
                    newFileName += filename.substring(filename.lastIndexOf("."));
                }
                File fileFolderPath = new File(Global.folderLocalPath);
                if (fileFolderPath.exists() == false) {
                    fileFolderPath.mkdirs();
                }
                videoPath = new File(fileFolderPath, newFileName);
                file.transferTo(videoPath);
            } catch (Exception e) {
                e.printStackTrace();
                status.setError();
            }
            // 2.如果成功,上传视频至网易服务器,缓存动作文件
            ResponseStatus uploadToNeteaseResult = uploadVideoToNeteaseStep1(videoPath);
            if (uploadToNeteaseResult.equals("error")) {
                return status;
            }
            // 3.将动作文件保存至阿里云
           ResponseStatus uploadFile = PostUploadFile.uploadFile(videoPath);
           if(uploadFile.equals("error")){
               status.setError();
           }
           // 5.将文件名+存储路径以json方式发给appserver
            status.setOk();
        } else {
            status.setError();
        }
        return status;
    }

    /**
     * 请求伏羲服务器动作迁移接口
     */
    private ResponseStatus uploadVideoToNeteaseStep1(File file) {
        ResponseStatus responseStatus = new ResponseStatus();
        // File file = new
        // File("C:/Users/Administrator/Desktop/漫画宇宙/9a6c26bd7ae306.mp4");
        String targetURL = "http://dianjing-server-motion-v2-53-8080.apps.danlu.netease.com/api/v2/motion/upload";
        PostMethod filePost = new PostMethod(targetURL); // 若没有commons-codec-1.4-bin.zip,
                                                         // 这里将会出错
        GetMethod videoGet = new GetMethod(
                "http://dianjing-server-motion-v2-53-8080.apps.danlu.netease.com/api/v2/retargeting/result");
        try {

            // 通过以下方法可以模拟页面参数提交
            HttpMethodParams params = new HttpMethodParams();
            params.setParameter("retargeting", "true");
            params.setParameter("target", "qss");
            params.setParameter("export_fbx", "false");
            params.setParameter("export_txt", "true");
            params.setParameter("format", "unity");
            params.setParameter("compress", "true");
            filePost.setParams(params);
            Part[] parts = { new FilePart("file", file) };

            filePost.setRequestEntity(new MultipartRequestEntity(parts, filePost.getParams()));
            HttpClient client = new HttpClient();
            client.getHttpConnectionManager().getParams().setConnectionTimeout(10000);
            int status = client.executeMethod(filePost);
            if (status == 201) {
                System.out.println("上传成功");
                ByteArrayOutputStream out = new ByteArrayOutputStream();
                InputStream in = filePost.getResponseBodyAsStream();
                int len = 0;
                byte[] buf = new byte[1024];
                while ((len = in.read(buf)) != -1) {
                    out.write(buf, 0, len);
                }
                String responseMsg = out.toString("UTF-8");
                System.out.println(responseMsg);
                // 上传成功
                JSONObject json = JSONObject.parseObject(responseMsg);
                Integer code = json.getInteger("code");
                String msg = json.getString("msg");
                String requestid = json.getString("requestid");

                String fbxObjectid = uploadVideoToNeteaseStep2(requestid);
                if (StringUtils.isEmpty(fbxObjectid)) {
                    responseStatus.setError();
                    return responseStatus;
                }
                String url = "http://dianjing-server-motion-v2-53-8080.apps.danlu.netease.com/api/v2/files/"
                        + fbxObjectid;
                try {
                    URL root = new URL(url);
                    uploadVideoToNeteaseStep3(root);
                    responseStatus.setOk();
                    return responseStatus;
                } catch (Exception e) {
                    System.out.println(e);
                    responseStatus.setError();
                    return responseStatus;
                }
            } else {
                System.out.println("上传失败");
                // 上传失败
                responseStatus.setError();
                return responseStatus;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            responseStatus.setError();
            return responseStatus;
        } finally {
            filePost.releaseConnection();
            videoGet.releaseConnection();
        }

    }

    /**
     * 请求伏羲服务器获取结果接口
     */
    private static String uploadVideoToNeteaseStep2(String requestid) {
        String fbxObjectid = "";
        try {
            while (true) {
                URL url = new URL(
                        "http://dianjing-server-motion-v2-53-8080.apps.danlu.netease.com/api/v2/retargeting/result"
                                + "?requestid=" + requestid);
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();

                connection.setDoOutput(true); // 设置该连接是可以输出的
                connection.setRequestMethod("GET"); // 设置请求方式
                connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");

                BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream(), "utf-8"));
                String line = null;
                StringBuilder result = new StringBuilder();
                while ((line = br.readLine()) != null) { // 读取数据
                    result.append(line + "\n");
                }
                connection.disconnect();
                System.out.println(UnicodeUtil.decode(result.toString()));
                JSONObject jsonResult = JSONObject.parseObject(result.toString());
                String progress = jsonResult.getString("status");
                Thread.sleep(2000);
                if (progress.equals("done")) {
                    fbxObjectid = jsonResult.getString("fbx_objectid");
                    System.out.println(fbxObjectid);
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return fbxObjectid;
    }

    /**
     * 下载动作文件
     * 
     * @throws IOException
     * @throws FileNotFoundException
     */
    private static void uploadVideoToNeteaseStep3(URL u) throws FileNotFoundException, IOException {
        URLConnection uc = u.openConnection();
        String contentType = uc.getContentType();
        int contentLength = uc.getContentLength();
        try (InputStream raw = uc.getInputStream()) {
            InputStream in = new BufferedInputStream(raw);
            byte[] data = new byte[contentLength];
            int offset = 0;
            while (offset < contentLength) {
                int bytesRead = in.read(data, offset, data.length - offset);
                if (bytesRead == -1) {
                    break;
                }
                offset += bytesRead;
            }

            if (offset != contentLength) {
                throw new IOException("Only read " + offset + " bytes; Expected " + contentLength + " bytes");
            }
            String filename = "E:\\download\\temp_" + getRandomFileName() + ".fbx";
            try (FileOutputStream fout = new FileOutputStream(filename)) {
                fout.write(data);
                fout.flush();
            }
        }
    }

    /**
     * 生成随机文件名：当前年月日时分秒+五位随机数
     * 
     * @return
     */
    public static String getRandomFileName() {
        SimpleDateFormat simpleDateFormat;
        simpleDateFormat = new SimpleDateFormat("yyyyMMdd");
        Date date = new Date();
        String str = simpleDateFormat.format(date);
        Random random = new Random();
        int rannum = (int) (random.nextDouble() * (99999 - 10000 + 1)) + 10000;// 获取5位随机数
        return rannum + str;// 当前时间
    }
    /*
     * // 查询文件上传进度
     * 
     * @Override public String getUploadProgressBar(String videoKey) { // TODO
     * Auto-generated method stub return null; }
     */

    public static void main(String[] args) {
        File file = new File("C:/Users/Administrator/Desktop/漫画宇宙/9a6c26bd7ae306.mp4");
        String targetURL = "http://dianjing-server-motion-v2-53-8080.apps.danlu.netease.com/api/v2/motion/upload";
        PostMethod filePost = new PostMethod(targetURL); // 若没有commons-codec-1.4-bin.zip,
                                                         // 这里将会出错
        GetMethod videoGet = new GetMethod(
                "http://dianjing-server-motion-v2-53-8080.apps.danlu.netease.com/api/v2/retargeting/result");
        try {

            // 通过以下方法可以模拟页面参数提交
            HttpMethodParams params = new HttpMethodParams();
            params.setParameter("retargeting", "true");
            params.setParameter("target", "qss");
            params.setParameter("export_fbx", "false");
            params.setParameter("export_txt", "true");
            params.setParameter("format", "unity");
            params.setParameter("compress", "true");
            filePost.setParams(params);
            Part[] parts = { new FilePart("file", file) };

            filePost.setRequestEntity(new MultipartRequestEntity(parts, filePost.getParams()));
            HttpClient client = new HttpClient();
            client.getHttpConnectionManager().getParams().setConnectionTimeout(10000);
            int status = client.executeMethod(filePost);
            if (status == 201) {
                System.out.println("上传成功");
                ByteArrayOutputStream out = new ByteArrayOutputStream();
                InputStream in = filePost.getResponseBodyAsStream();
                int len = 0;
                byte[] buf = new byte[1024];
                while ((len = in.read(buf)) != -1) {
                    out.write(buf, 0, len);
                }
                String responseMsg = out.toString("UTF-8");
                System.out.println(responseMsg);
                // 上传成功
                JSONObject json = JSONObject.parseObject(responseMsg);
                Integer code = json.getInteger("code");
                String msg = json.getString("msg");
                String requestid = json.getString("requestid");

                String fbxObjectid = uploadVideoToNeteaseStep2(requestid);
                String url = "http://dianjing-server-motion-v2-53-8080.apps.danlu.netease.com/api/v2/files/"
                        + fbxObjectid;
                try {
                    URL root = new URL(url);
                    uploadVideoToNeteaseStep3(root);
                } catch (MalformedURLException e) {
                    System.out.println(url + "is not URL");
                } catch (IOException e) {
                    System.out.println(e);
                }
            } else {
                System.out.println("上传失败");
                // 上传失败
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            filePost.releaseConnection();
            videoGet.releaseConnection();
        }

    }

}
